/**
 * Chapter 2 	- 	Builder Pattern - Problem Statement
 * Author		-	Jitendra Zaa
 * */

@isTest
public class OpportunityTriggerTest {
    
    //Test method to test if state is populated
    //on Opportunity and Brokers
    static testMethod void validateState()
    {
        
        //create user record so that it can be used while 
        //creating Area office records
        Profile p = [SELECT Id FROM Profile WHERE Name='Standard User']; 
        
        //Use Crypto.getRandomInteger() to get random 
        //string to make sure username is unique
        User u = new User(
            Alias = 'standt', 
            Email='dummyEmail@email.com', 
            EmailEncodingKey='UTF-8', 
            LastName='Testing', 
            LanguageLocaleKey='en_US', 
            LocaleSidKey='en_US', 
            ProfileId = p.Id,  
            TimeZoneSidKey='America/Los_Angeles', 
            UserName='dummyEmail'+Crypto.getRandomInteger()+'@email.com');
        
        insert u;
        
        Area_Office__c ofc = new Area_Office__c(
            Manager__c = u.Id,
            State__c = 'CT',
            City__c = 'Manchester');
        
       insert ofc ; 
       
       Opportunity opp = new Opportunity(
           Name = 'Test Opportunity Test',
       	   CloseDate = Date.today().addDays(7),
           StageName = 'Prospecting',
           State__c = 'CT',
           City__c = 'Manchester'
       ) ;
       
        //Reset givernor limits while Saving Opportunity
        Test.startTest();
        insert opp;
        
        //If there is any asynchornous process
        //stoptest() will make sure its executed
        Test.stopTest();
        
        //Get inserted record from Table to assert 
        //Area_Office lookup
        Opportunity oppInserted = [SELECT Area_Office__c FROM Opportunity Where Id=:opp.Id];
        
        //Confirm that Area office lookup is not blank
        System.assertNotEquals(oppInserted.Area_Office__c, null) ; 
        
    }
}